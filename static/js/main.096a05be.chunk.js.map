{"version":3,"sources":["images/correct.svg","images/wrong.svg","components/QuestionFilter/Filters/Categories/Categories.js","components/QuestionFilter/Filters/Difficulty/Difficulty.js","components/QuestionFilter/Filters/Type/Type.js","components/Quiz/AnswerResult/AnswerResult.js","components/Quiz/Answers/Answers.js","components/Quiz/Emoji/Emoji.js","components/Quiz/QuizFinished/QuizFinished.js","components/Quiz/Quiz.js","hooks/displayQuestions.js","components/QuestionFilter/QuestionFilter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Categories","setCategory","className","id","name","onChange","e","target","value","Difficulty","setDifficulty","Type","setType","AnswerResult","isAnswerCorrect","nextQuestion","setIsAnswerCorrect","chosenAnswer","correctAnswer","type","src","CorrectIcon","alt","WrongIcon","onClick","Answers","max","incorrectAnswers","numCorrectAnswers","setNumCorrectAnswers","setChosenAnswer","answers","useState","Math","floor","random","incorrectIndex","i","length","replace","checkAnswer","textContent","map","answer","key","Emoji","props","role","aria-label","label","aria-hidden","symbol","QuizFinished","numQuestions","resetQuiz","score","round","Quiz","setNumQuestions","category","difficulty","onRouteChange","url","dependencies","isLoading","setIsLoading","questions","setQuestions","useEffect","console","log","fetch","then","response","json","data","results","catch","err","useDataFetch","index","setIndex","questionsRemaining","setQuestionsRemaining","isQuizFinished","setIsQuizFinished","unescape","question","incorrect_answers","correct_answer","QuestionFilter","isFilterCorrect","setIsFilterCorrect","route","setRoute","newRoute","onSubmit","preventDefault","toString","isNaN","Number","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.096a05be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/correct.d89daf44.svg\";","module.exports = __webpack_public_path__ + \"static/media/wrong.2afee8d5.svg\";","import React from 'react'\n\nconst Categories = ({ setCategory }) => {\n\n    const onCategoryChange = e => {\n        setCategory(e.target.value)\n    }\n\n    return (\n        <article className=\"filterContainer\">\n            <select id=\"categories\" name=\"categories\" onChange={onCategoryChange}>\n                <option value=\"Any\">Any Category</option>\n                <option value=\"9\">General Knowledge</option>\n                <option value=\"10\">Entertainment: Books</option>\n                <option value=\"11\">Entertainment: Film</option>\n                <option value=\"12\">Entertainment: Music</option>\n                <option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\n                <option value=\"14\">Entertainment: Television</option>\n                <option value=\"15\">Entertainment: Video Games</option>\n                <option value=\"16\">Entertainment: Board Games</option>\n                <option value=\"29\">Entertainment: Comics</option>\n                <option value=\"31\">Entertainment: Japanese Anime &amp; Manga</option>\n                <option value=\"32\">Entertainment: Cartoon &amp; Animation</option>\n                <option value=\"17\">Science</option>\n                <option value=\"18\">Science: Computers</option>\n                <option value=\"19\">Science: Mathematics</option>\n                <option value=\"30\">Science: Gadgets</option>\n                <option value=\"20\">Mythology</option>\n                <option value=\"21\">Sports</option>\n                <option value=\"22\">Geography</option>\n                <option value=\"23\">History</option>\n                <option value=\"24\">Politics</option>\n                <option value=\"25\">Art</option>\n                <option value=\"26\">Celebrities</option>\n                <option value=\"27\">Animals</option>\n                <option value=\"28\">Vehicles</option>\n            </select>\n        </article>\n    )\n}\n\nexport default Categories","import React from 'react'\n\nconst Difficulty = ({ setDifficulty }) => {\n\n    const onDifficultyChange = e => {\n        setDifficulty(e.target.value)\n    }\n\n    return (\n        <article className=\"filterContainer\">\n            <select id=\"difficulty\" name=\"difficulty\" onChange={onDifficultyChange}>\n                <option value=\"Any\">Any Difficulty</option>\n                <option value=\"easy\">Easy</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"hard\">Hard</option>\n            </select>\n        </article>\n    )\n}\n\nexport default Difficulty","import React from 'react'\n\nconst Type = ({ setType }) => {\n\n    const onTypeChange = e => {\n        setType(e.target.value)\n    }\n\n    return (\n        <article className=\"filterContainer\">\n            <select id=\"categories\" name=\"categories\" onChange={onTypeChange}>\n                <option value=\"Any\">Any Type</option>\n                <option value=\"multiple\">Multiple Choice</option>\n                <option value=\"boolean\">True / False</option>\n            </select>\n        </article>\n    )\n}\n\nexport default Type","import React from 'react'\nimport CorrectIcon from '../../../images/correct.svg'\nimport WrongIcon from '../../../images/wrong.svg'\n\nconst AnswerResult = ({     isAnswerCorrect, \n                            nextQuestion, \n                            setIsAnswerCorrect, \n                            chosenAnswer, \n                            correctAnswer,\n                            type,\n                }) => {\n\n    const goToNextQuestion = (e) => {\n        nextQuestion()\n        setIsAnswerCorrect('unanswered')\n    }\n\n    return (\n        <article className={isAnswerCorrect ? \"answerResult correct\" : \"answerResult wrong\"}>\n            {\n                isAnswerCorrect\n                ?\n                <article className=\"resultIconContainer\">\n                    <figure className=\"resultIcon\">\n                        <img src={CorrectIcon} alt=\"Correct answer icon\" />\n                    </figure>\n                    {\n                        type === 'multiple' ?\n                        <p>{`${chosenAnswer} is correct, well done!`}</p>\n                        :\n                        <p>{`That's correct, well done!`}</p>\n                    }\n                    \n                </article>\n                :\n                <article className=\"resultIconContainer\">\n                    <figure className=\"resultIcon\">\n                        <img src={WrongIcon} alt=\"Wrong answer icon\" />\n                    </figure>\n                    {\n                        type === 'multiple' ?\n                        <article>\n                            <p>{`Sorry, ${chosenAnswer} is incorrect.`}</p>\n                            <p>{`The correct answer was ${correctAnswer}`}</p>\n                        </article>\n                        :\n                        <p>{`Sorry, that's incorrect.`}</p>\n                    }\n                </article>\n            }\n            <button onClick={goToNextQuestion}>Next Question</button>\n        </article>\n    )\n}\n\nexport default AnswerResult","import React, { useState } from 'react'\nimport AnswerResult from '../AnswerResult/AnswerResult'\n\nconst Answers = ({  incorrectAnswers, \n                    correctAnswer, \n                    type, \n                    nextQuestion, \n                    numCorrectAnswers, \n                    setNumCorrectAnswers, \n                    chosenAnswer,\n                    setChosenAnswer\n            }) => {\n\n    const answers = ['1', '2', '3', '4']\n    const [isAnswerCorrect, setIsAnswerCorrect] = useState('unanswered')\n    \n\n    const getRandomInt = (max) => {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    if (type === 'multiple') {\n        const randomIndex = getRandomInt(4)\n        answers[randomIndex] = correctAnswer\n        let incorrectIndex = 0;\n        for (let i = 0; i < answers.length; i++) {\n            if (answers[i] !== correctAnswer) {\n                answers[i] = incorrectAnswers[incorrectIndex]\n                incorrectIndex++\n            }\n        }\n    }\n\n    if (incorrectAnswers.length) {\n        for (let i = 0; i < incorrectAnswers.length; i++) {\n            incorrectAnswers[i] = incorrectAnswers[i].replace(/&quot;/g,'\"')\n            incorrectAnswers[i] = incorrectAnswers[i].replace(/&#039;/g,\"'\")\n            incorrectAnswers[i] = incorrectAnswers[i].replace(/&eacute;/g,\"é\")\n            incorrectAnswers[i] = incorrectAnswers[i].replace(/&Aacute;/g,\"Á\")\n            incorrectAnswers[i] = incorrectAnswers[i].replace(/&amp;/g,\"&\")\n            incorrectAnswers[i] = incorrectAnswers[i].replace(/&rsquo;/g,\"'\")\n            incorrectAnswers[i] = incorrectAnswers[i].replace(/&lsquo;/g,\"'\")\n        }\n    }\n\n    if (correctAnswer.length) {\n        correctAnswer = correctAnswer.replace(/&quot;/g,'\"')\n        correctAnswer = correctAnswer.replace(/&#039;/g,\"'\")\n        correctAnswer = correctAnswer.replace(/&eacute;/g,\"é\")\n        correctAnswer = correctAnswer.replace(/&Aacute;/g,\"Á\")\n        correctAnswer = correctAnswer.replace(/&amp;/g,\"&\")\n        correctAnswer = correctAnswer.replace(/&rsquo;/g,\"'\")\n        correctAnswer = correctAnswer.replace(/&lsquo;/g,\"'\")\n        \n    }\n\n    const checkAnswer = e => {\n        if (chosenAnswer.length > 0) return\n\n        if (e.target.textContent === correctAnswer) {\n            setNumCorrectAnswers(numCorrectAnswers + 1)\n            setIsAnswerCorrect(true)\n        } else {\n            setIsAnswerCorrect(false)\n        }\n        setChosenAnswer(e.target.textContent)\n    }\n\n    return (\n        <article className=\"answers\">\n            <article className=\"optionsContainer\">\n                {\n                    type === 'boolean' ?\n                    <article className=\"boolean-option-container\">\n                        <button className=\"boolean-option\" onClick={checkAnswer}>True</button>\n                        <button className=\"boolean-option\" onClick={checkAnswer}>False</button>\n                    </article>\n                    :\n                    (\n                        answers.map((answer, i) => {\n                            return (\n                                    <button key={i} \n                                            className={answer.length < 50 \n                                                    ? \"multiple-option\" \n                                                    : \"multiple-option largeAnswer\"\n                                                }\n                                            onClick={checkAnswer}\n                                    >\n                                    {answer}\n                                    </button>\n                            )\n                        })\n                    )\n                }\n            </article>\n            <article className=\"answerResult-container\">\n            {\n                isAnswerCorrect !== 'unanswered' &&\n                <AnswerResult isAnswerCorrect={isAnswerCorrect} \n                                nextQuestion={nextQuestion} \n                                setIsAnswerCorrect={setIsAnswerCorrect}\n                                chosenAnswer={chosenAnswer}\n                                correctAnswer={correctAnswer}\n                                type={type}\n                />\n            }\n            </article>\n        </article>\n    )\n}\n\nexport default Answers\n\n","import React from 'react';\n\nconst Emoji = props => (\n    <span\n        className=\"emoji\"\n        role=\"img\"\n        aria-label={props.label ? props.label : \"\"}\n        aria-hidden={props.label ? \"false\" : \"true\"}\n    >\n        {props.symbol}\n    </span>\n)\n\nexport default Emoji;","import React from 'react'\nimport Emoji from '../Emoji/Emoji'\n\nconst QuizFinished = ({ numQuestions, numCorrectAnswers, resetQuiz }) => {\n\n    const score = Math.round((numCorrectAnswers / numQuestions) * 100)\n\n    return (\n        <article className=\"quizFinished\">\n            <h3>{`You scored ${numCorrectAnswers}/${numQuestions}`}</h3>\n            {\n                score < 50 ?\n                <p>Better luck next time <Emoji symbol=\"&#128577;\" label=\"happy smiley\" /></p>\n                :\n                (\n                    score >= 50 && score < 70 ?\n                    <p>Congrats, you passed! <Emoji symbol=\"&#128522;\" label=\"happy smiley\" /></p>\n                    :\n                    (\n                        score >= 70 && score < 85 ?\n                        <p>Well done! <Emoji symbol=\"&#128512;\" label=\"happy smiley\" /></p>\n                        :\n                        <p>Wow! You aced it! <Emoji symbol=\"&#129299;\" label=\"nerd smiley\" /></p>\n                    )\n                )\n            }\n            <button className=\"restartButton\" onClick={resetQuiz}>Start another quiz</button>\n        </article>\n    )\n}\n\nexport default QuizFinished","import React, { useState } from 'react'\nimport { useDataFetch } from '../../hooks/displayQuestions'\nimport Answers from './Answers/Answers'\nimport QuizFinished from './QuizFinished/QuizFinished'\n\nconst Quiz = ({ numQuestions, \n                setNumQuestions,\n                category, setCategory,\n                difficulty, setDifficulty,\n                type, setType,\n                onRouteChange \n            }) => {\n    \n    const [isLoading, questions] = useDataFetch(`https://opentdb.com/api.php?amount=${numQuestions}${category !== 'Any' ? `&category=${category}` : \"\"}${difficulty !== 'Any' ? `&difficulty=${difficulty}` : \"\"}${type !== 'Any' ? `&type=${type}` : \"\"}`)                                   \n    const [index, setIndex] = useState(0)\n    const [questionsRemaining, setQuestionsRemaining] = useState(numQuestions)\n    const [numCorrectAnswers, setNumCorrectAnswers] = useState(0)\n    const [isQuizFinished, setIsQuizFinished] = useState(false)\n    const [chosenAnswer, setChosenAnswer] = useState('')\n\n    const nextQuestion = () => {\n        if (index < questions.length - 1) {\n            setIndex(index + 1)\n            setQuestionsRemaining(questionsRemaining - 1)\n        } else {\n            setIsQuizFinished(true)\n        }\n        setChosenAnswer('')\n    }\n\n    const resetQuiz = () => {\n        setIndex(0)\n        setQuestionsRemaining(0)\n        setNumCorrectAnswers(0)\n        setIsQuizFinished(false)\n        setChosenAnswer('')\n        setNumQuestions(0)\n        setCategory('Any')\n        setDifficulty('Any')\n        setType('Any')\n        onRouteChange('home')\n    }\n\n    if (questions.length) {\n        console.log(unescape('&quot;&quot;&quot;'))\n        questions[index].question = questions[index].question.replace(/&quot;/g,'\"')\n        questions[index].question = questions[index].question.replace(/&#039;/g,\"'\")\n        questions[index].question = questions[index].question.replace(/&eacute;/g,\"é\")\n        questions[index].question = questions[index].question.replace(/&Aacute;/g,\"Á\")\n        questions[index].question = questions[index].question.replace(/&rsquo;/g,\"'\")\n        questions[index].question = questions[index].question.replace(/&lsquo;/g,\"'\")\n        questions[index].question = questions[index].question.replace(/&ouml;/g,\"ö\")\n    }\n    \n    return (\n       <section className=\"quiz\">\n           {\n               isLoading ?\n               <h2>Loading Questions</h2>\n               :\n               (\n                    isQuizFinished ?\n                    <QuizFinished   numQuestions={numQuestions} \n                                    numCorrectAnswers={numCorrectAnswers}\n                                    resetQuiz={resetQuiz}\n                    />\n                    :\n                    (   \n                        questions.length &&\n                        <section className=\"questionContainer\">\n                            <article className=\"quizStatus\">\n                                <p>{`Questions Remaining: ${questionsRemaining}`}</p>\n                                <p>{`Correct Answers: ${numCorrectAnswers}`}</p>\n                            </article>\n                            <p className=\"question\">{questions[index].question}</p>\n                            <article>\n                                <Answers    incorrectAnswers={questions[index].incorrect_answers} \n                                            correctAnswer={questions[index].correct_answer}\n                                            type={questions[index].type}\n                                            nextQuestion={nextQuestion}\n                                            numCorrectAnswers={numCorrectAnswers}\n                                            setNumCorrectAnswers={setNumCorrectAnswers}\n                                            chosenAnswer={chosenAnswer}\n                                            setChosenAnswer={setChosenAnswer}\n                                />\n                            </article>\n                        </section>\n                    )\n               )\n                \n           }\n       </section>\n   )\n}\n\nexport default Quiz","import { useState, useEffect } from 'react'\n\nexport const useDataFetch = (url, dependencies) => {\n\n    const [isLoading, setIsLoading] = useState(false)\n    const [questions, setQuestions] = useState([])\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        console.log('Fetching questions...')\n        console.log(url)\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                setQuestions(data.results)\n                setIsLoading(false)\n            })\n            .catch(err => {\n                console.log(err)\n                setQuestions([\"Couldn't find any questions\"])\n                setIsLoading(false)\n            })\n    }, [url])\n\n    return [isLoading, questions]\n\n}","import React, { useState } from 'react'\nimport Categories from './Filters/Categories/Categories'\nimport Difficulty from './Filters/Difficulty/Difficulty'\nimport Type from './Filters/Type/Type'\nimport Quiz from '../Quiz/Quiz';\n\nconst QuestionFilter = () => {\n    \n    const [numQuestions, setNumQuestions] = useState(0)\n    const [category, setCategory] = useState('Any')\n    const [difficulty, setDifficulty] = useState('Any')\n    const [type, setType] = useState('Any')\n    const [isFilterCorrect, setIsFilterCorrect] = useState(true)\n\n    const [route, setRoute] = useState('home')\n\n    const onRouteChange = newRoute => {\n        setRoute(newRoute)\n    }\n\n    const onNumQuestionsChange = e => {\n        if (numQuestions.toString().length === 0) {\n            setIsFilterCorrect(true)\n        }\n        setNumQuestions(e.target.value)\n    }\n\n    const checkNumQuestions = e => {\n        e.preventDefault()\n        if (numQuestions.toString().length === 0) {\n            setIsFilterCorrect(false)\n        } else if ( numQuestions <= 0 || isNaN(numQuestions) || \n                    numQuestions > 50) {\n            setIsFilterCorrect(false)\n        } else {\n            setNumQuestions(Math.round(Number(numQuestions)))\n            setIsFilterCorrect(true)\n            onRouteChange('quiz')\n        }\n    }\n\n    return (\n        <section>\n            {\n                route === 'home' ?\n                <article>\n                    <h2>What kind of questions would you like?</h2>\n                    <form className=\"questionFilter\" onSubmit={checkNumQuestions}>\n                        <input  type=\"text\" \n                                placeholder=\"Number of questions (max 50)\" \n                                onChange={onNumQuestionsChange} \n                        />\n                        <Categories setCategory={setCategory} />\n                        <Difficulty setDifficulty={setDifficulty} />\n                        <Type setType={setType} />\n                        <button className=\"filterButton\" type=\"submit\">Submit</button>\n                        <article className={isFilterCorrect ? \"errorMessage hide\" : \"errorMessage show\"}>\n                            <p>Please enter a valid number of questions</p>\n                        </article>\n                    </form>\n                </article>\n                :\n                <Quiz   numQuestions={numQuestions} \n                        setNumQuestions={setNumQuestions}\n                        category={category}\n                        setCategory={setCategory}\n                        difficulty={difficulty}\n                        setDifficulty={setDifficulty}\n                        type={type}\n                        setType={setType}\n                        onRouteChange={onRouteChange}\n                />\n            }\n        </section>\n    )\n}\n\nexport default QuestionFilter","import React from 'react';\nimport QuestionFilter from './components/QuestionFilter/QuestionFilter';\n\nimport './App.css';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <h1>Trivia</h1>\n      <QuestionFilter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}